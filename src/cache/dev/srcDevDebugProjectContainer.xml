<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.root_dir">C:\Users\kokoala\PhpstormProjects\dddSample\src</parameter>
    <parameter key="kernel.project_dir">C:\Users\kokoala\PhpstormProjects\dddSample</parameter>
    <parameter key="kernel.environment">dev</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.name">src</parameter>
    <parameter key="kernel.cache_dir">C:\Users\kokoala\PhpstormProjects\dddSample\src\cache\dev</parameter>
    <parameter key="kernel.logs_dir">C:\Users\kokoala\PhpstormProjects\dddSample\src\logs</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
    </parameter>
    <parameter key="kernel.bundles_metadata" type="collection">
      <parameter key="FrameworkBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">C:\Users\kokoala\PhpstormProjects\dddSample\vendor\symfony\framework-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\FrameworkBundle</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">srcDevDebugProjectContainer</parameter>
    <parameter key="database_host">127.0.0.1</parameter>
    <parameter key="database_port">null</parameter>
    <parameter key="database_name">symfony</parameter>
    <parameter key="database_user">root</parameter>
    <parameter key="database_password">null</parameter>
    <parameter key="mailer_transport">smtp</parameter>
    <parameter key="mailer_host">127.0.0.1</parameter>
    <parameter key="mailer_user">null</parameter>
    <parameter key="mailer_password">null</parameter>
    <parameter key="secret">ThisTokenIsNotSoSecretChangeIt</parameter>
    <parameter key="locale">en</parameter>
    <parameter key="fragment.renderer.hinclude.global_template"></parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="kernel.secret">ThisTokenIsNotSoSecretChangeIt</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.default_locale">en</parameter>
    <parameter key="templating.helper.code.file_link_format">null</parameter>
    <parameter key="debug.file_link_format">null</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="cookie_httponly">true</parameter>
      <parameter key="gc_probability">1</parameter>
    </parameter>
    <parameter key="session.save_path">C:\Users\kokoala\PhpstormProjects\dddSample\src/../var/sessions/dev</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="data_collector.templates" type="collection"/>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.container.dump">C:\Users\kokoala\PhpstormProjects\dddSample\src\cache\dev/srcDevDebugProjectContainer.xml</parameter>
    <parameter key="router.options.generator_class">Symfony\Component\Routing\Generator\UrlGenerator</parameter>
    <parameter key="router.options.generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</parameter>
    <parameter key="router.options.generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</parameter>
    <parameter key="router.options.matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</parameter>
    <parameter key="router.options.matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</parameter>
    <parameter key="router.options.matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</parameter>
    <parameter key="router.options.matcher.cache_class">srcDevDebugProjectContainerUrlMatcher</parameter>
    <parameter key="router.options.generator.cache_class">srcDevDebugProjectContainerUrlGenerator</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">C:\Users\kokoala\PhpstormProjects\dddSample\src/config/routing_dev.yml</parameter>
    <parameter key="router.cache_class_prefix">srcDevDebugProjectContainer</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="console.command.ids" type="collection"/>
  </parameters>
  <services>
    <service id="service_container" class="Symfony\Component\DependencyInjection\ContainerInterface" synthetic="true"/>
    <service id="controller_name_converter" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="kernel"/>
    </service>
    <service id="argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="100"/>
    </service>
    <service id="argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="50"/>
    </service>
    <service id="argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="50"/>
    </service>
    <service id="argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="-50"/>
      <argument type="service">
        <service class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
          <tag name="container.service_locator"/>
          <argument type="collection"/>
        </service>
      </argument>
    </service>
    <service id="argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="-100"/>
    </service>
    <service id="argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="-150"/>
    </service>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <argument>UTF-8</argument>
    </service>
    <service id="streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="request_stack"/>
      <argument>en</argument>
      <argument type="service" id="router" on-invalid="ignore"/>
    </service>
    <service id="validate_request_listener" class="Symfony\Component\HttpKernel\EventListener\ValidateRequestListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="2_049476289835120ba19ff2c05bed8e553a4af73f66cc43fb7602e05ad2c395a5" class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-990"/>
    </service>
    <service id="1_049476289835120ba19ff2c05bed8e553a4af73f66cc43fb7602e05ad2c395a5" class="Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-980"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\HttpKernel">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.argument_resolver"/>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack"/>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="router"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="kernel.class_cache.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ClassCacheCacheWarmer">
      <argument type="collection">
        <argument>Symfony\Component\HttpFoundation\ParameterBag</argument>
        <argument>Symfony\Component\HttpFoundation\HeaderBag</argument>
        <argument>Symfony\Component\HttpFoundation\FileBag</argument>
        <argument>Symfony\Component\HttpFoundation\ServerBag</argument>
        <argument>Symfony\Component\HttpFoundation\Request</argument>
        <argument>Symfony\Component\HttpKernel\Kernel</argument>
      </argument>
      <deprecated>The "%service_id%" option is deprecated since version 3.3, to be removed in 4.0.</deprecated>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer">
      <argument type="collection">
        <argument type="service" id="cache.default_clearer"/>
      </argument>
    </service>
    <service id="kernel" synthetic="true"/>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator">
      <argument type="service" id="kernel"/>
      <argument>C:\Users\kokoala\PhpstormProjects\dddSample\src/Resources</argument>
      <argument type="collection">
        <argument>C:\Users\kokoala\PhpstormProjects\dddSample\src</argument>
      </argument>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner">
      <argument>ThisTokenIsNotSoSecretChangeIt</argument>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory">
      <argument type="iterator">
        <argument type="service" id="1_049476289835120ba19ff2c05bed8e553a4af73f66cc43fb7602e05ad2c395a5"/>
        <argument type="service" id="2_049476289835120ba19ff2c05bed8e553a4af73f66cc43fb7602e05ad2c395a5"/>
      </argument>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler">
      <argument type="service" id="service_locator.bfd5b6291539802202b7fb6cbde163a4"/>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.hinclude" class="Symfony\Component\HttpKernel\Fragment\HIncludeFragmentRenderer">
      <argument></argument>
      <argument type="service" id="uri_signer"/>
      <argument></argument>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.esi" class="Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="esi"/>
      <argument>null</argument>
      <argument type="service" id="fragment.renderer.inline"/>
      <argument type="service" id="uri_signer"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.ssi" class="Symfony\Component\HttpKernel\Fragment\SsiFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="ssi"/>
      <argument>null</argument>
      <argument type="service" id="fragment.renderer.inline"/>
      <argument type="service" id="uri_signer"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="console.error_listener" class="Symfony\Component\Console\EventListener\ErrorListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="console"/>
      <argument>null</argument>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor">
      <argument>false</argument>
      <argument>false</argument>
      <argument>null</argument>
    </service>
    <service id="cache.app" class="Symfony\Component\Cache\Adapter\FilesystemAdapter">
      <tag name="cache.pool"/>
      <tag name="cache.pool" clearer="cache.default_clearer" unlazy="1"/>
      <argument>I3l0tDV93V</argument>
      <argument>0</argument>
      <argument>C:\Users\kokoala\PhpstormProjects\dddSample\src\cache\dev/pools</argument>
    </service>
    <service id="cache.system" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <tag name="cache.pool" clearer="cache.default_clearer" unlazy="1"/>
      <argument>37niVNT+F5</argument>
      <argument>0</argument>
      <argument>zurRnLqs2J+A10d73OOEVi</argument>
      <argument>C:\Users\kokoala\PhpstormProjects\dddSample\src\cache\dev/pools</argument>
      <argument>null</argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.default_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer">
      <tag name="kernel.cache_clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app"/>
        <argument key="cache.system" type="service" id="cache.system"/>
      </argument>
    </service>
    <service id="cache.global_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer">
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app"/>
        <argument key="cache.system" type="service" id="cache.system"/>
      </argument>
    </service>
    <service id="session" class="Symfony\Component\HttpFoundation\Session\Session">
      <argument type="service" id="session.storage.native"/>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag" public="false"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Flash\FlashBag" public="false"/>
      </argument>
    </service>
    <service id="session.storage.metadata_bag" class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag" public="false">
      <argument>_sf2_meta</argument>
      <argument>0</argument>
    </service>
    <service id="session.storage.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage">
      <argument type="collection">
        <argument key="cookie_httponly">true</argument>
        <argument key="gc_probability">1</argument>
      </argument>
      <argument type="service" id="session.handler"/>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.storage.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage">
      <argument type="service" id="session.handler"/>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session_listener" class="Symfony\Component\HttpKernel\EventListener\SessionListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service">
        <service class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
          <tag name="container.service_locator"/>
          <argument type="collection">
            <argument key="session" type="service" id="session" on-invalid="ignore"/>
          </argument>
        </service>
      </argument>
    </service>
    <service id="session.save_listener" class="Symfony\Component\HttpKernel\EventListener\SaveSessionListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="security.csrf.token_manager" class="Symfony\Component\Security\Csrf\CsrfTokenManager">
      <argument type="service">
        <service class="Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator" public="false"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage" public="false">
          <argument type="service" id="session"/>
        </service>
      </argument>
    </service>
    <service id="fragment.listener" class="Symfony\Component\HttpKernel\EventListener\FragmentListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="uri_signer"/>
      <argument>/_fragment</argument>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="php"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument>-1</argument>
      <argument>-1</argument>
      <argument>true</argument>
      <argument type="service">
        <service class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" public="false">
          <argument>null</argument>
        </service>
      </argument>
      <argument>true</argument>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch"/>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher">
      <tag name="monolog.logger" channel="event"/>
      <argument type="service">
        <service class="Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher" public="false">
          <argument type="service" id="service_container"/>
        </service>
      </argument>
      <argument type="service" id="debug.stopwatch"/>
      <argument>null</argument>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="closure-proxy" id="response_listener" method="onKernelResponse"/>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="closure-proxy" id="streamed_response_listener" method="onKernelResponse"/>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="closure-proxy" id="locale_listener" method="onKernelRequest"/>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="closure-proxy" id="locale_listener" method="onKernelFinishRequest"/>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="closure-proxy" id="validate_request_listener" method="onKernelRequest"/>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="closure-proxy" id="console.error_listener" method="onConsoleError"/>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="closure-proxy" id="console.error_listener" method="onConsoleTerminate"/>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="closure-proxy" id="session_listener" method="onKernelRequest"/>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="closure-proxy" id="session.save_listener" method="onKernelResponse"/>
        <argument>-1000</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="closure-proxy" id="fragment.listener" method="onKernelRequest"/>
        <argument>48</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="closure-proxy" id="debug.debug_handlers_listener" method="configure"/>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="closure-proxy" id="router_listener" method="onKernelRequest"/>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="closure-proxy" id="router_listener" method="onKernelFinishRequest"/>
        <argument>0</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service">
        <service class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver" public="false">
          <argument type="service" id="service_container"/>
          <argument type="service" id="controller_name_converter"/>
          <argument>null</argument>
        </service>
      </argument>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="debug.argument_resolver"/>
    </service>
    <service id="debug.argument_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver">
      <argument type="service">
        <service class="Symfony\Component\HttpKernel\Controller\ArgumentResolver" public="false">
          <argument type="service">
            <service class="Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory" public="false"/>
          </argument>
          <argument type="iterator">
            <argument type="service" id="argument_resolver.request_attribute"/>
            <argument type="service" id="argument_resolver.request"/>
            <argument type="service" id="argument_resolver.session"/>
            <argument type="service" id="argument_resolver.service"/>
            <argument type="service" id="argument_resolver.default"/>
            <argument type="service" id="argument_resolver.variadic"/>
          </argument>
        </service>
      </argument>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader">
      <argument type="service" id="controller_name_converter"/>
      <argument type="service">
        <service class="Symfony\Component\Config\Loader\LoaderResolver" public="false">
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\XmlFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\YamlFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\PhpFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Config\Loader\GlobFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\DirectoryLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="service_container"/>
              </service>
            </argument>
          </call>
        </service>
      </argument>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" public="false">
      <argument></argument>
      <argument>GET</argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="router"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="session.storage.filesystem" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage">
      <argument>C:\Users\kokoala\PhpstormProjects\dddSample\src\cache\dev/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.handler" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler">
      <argument>C:\Users\kokoala\PhpstormProjects\dddSample\src/../var/sessions/dev</argument>
    </service>
    <service id="router" class="Symfony\Bundle\FrameworkBundle\Routing\Router">
      <tag name="monolog.logger" channel="router"/>
      <argument type="service" id="service_container"/>
      <argument>C:\Users\kokoala\PhpstormProjects\dddSample\src/config/routing_dev.yml</argument>
      <argument type="collection">
        <argument key="cache_dir">C:\Users\kokoala\PhpstormProjects\dddSample\src\cache\dev</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</argument>
        <argument key="generator_cache_class">srcDevDebugProjectContainerUrlGenerator</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</argument>
        <argument key="matcher_cache_class">srcDevDebugProjectContainerUrlMatcher</argument>
        <argument key="strict_requirements">null</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument>null</argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
    </service>
    <service id="service_locator.bfd5b6291539802202b7fb6cbde163a4" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="esi" type="service" id="fragment.renderer.esi"/>
        <argument key="inline" type="service" id="fragment.renderer.inline"/>
        <argument key="ssi" type="service" id="fragment.renderer.ssi"/>
      </argument>
    </service>
    <service id="cache.app_clearer" alias="cache.default_clearer"/>
    <service id="session.storage" alias="session.storage.native"/>
    <service id="event_dispatcher" alias="debug.event_dispatcher"/>
  </services>
</container>
